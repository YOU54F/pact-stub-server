name: Release workflow

on:
  release:
    types: [published]

jobs:
  build-release:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: aarch64-apple-darwin
      - name: Install LLVM
        run: choco install -y llvm
        if: runner.os == 'Windows'
      - if: runner.os == 'Linux'
        run: ./scripts/release-linux.sh
      - if: runner.os == 'Windows'
        run: ./scripts/release-win.sh
        shell: bash
      - if: runner.os == 'macOS'
        run: ./scripts/release-osx.sh
        shell: bash
      - name: Upload Release Assets
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release_artifacts/*
          file_glob: true
          tag: ${{ github.ref }}

  release_docker:
    runs-on: ubuntu-latest
    needs: build-release

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log into ghcr registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Release image
        run: cd docker && hooks/build
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          DOCKER_TAG: ${{ github.ref }}